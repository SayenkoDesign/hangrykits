/*
Icon classes can be used entirely standalone. They are named after their original file names.

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.icon-facebook-hover {
  background-image: url(../images/sprite-map.png);
  background-position: 0px -36px;
  width: 35px;
  height: 34px;
}
.icon-facebook {
  background-image: url(../images/sprite-map.png);
  background-position: -35px -36px;
  width: 35px;
  height: 34px;
}
.icon-instagram-hover {
  background-image: url(../images/sprite-map.png);
  background-position: -74px 0px;
  width: 35px;
  height: 34px;
}
.icon-instagram {
  background-image: url(../images/sprite-map.png);
  background-position: -74px -34px;
  width: 35px;
  height: 34px;
}
.icon-pinterest-hover {
  background-image: url(../images/sprite-map.png);
  background-position: 0px -70px;
  width: 34px;
  height: 34px;
}
.icon-pinterest {
  background-image: url(../images/sprite-map.png);
  background-position: -34px -70px;
  width: 34px;
  height: 34px;
}
.icon-youtube-hover {
  background-image: url(../images/sprite-map.png);
  background-position: 0px 0px;
  width: 37px;
  height: 36px;
}
.icon-youtube {
  background-image: url(../images/sprite-map.png);
  background-position: -37px 0px;
  width: 37px;
  height: 36px;
}
